var j=Object.defineProperty;var p=(e,t)=>{for(var o in t)j(e,o,{get:t[o],enumerable:!0})};function b(e){let t=atob(e),o=t.length,n=new Uint8Array(o);for(let i=0;i<o;i++)n[i]=t.charCodeAt(i);return n}function d(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",o=e.byteLength;for(let n=0;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}var g=class{constructor(t="",o=1e3){this.prefix=t;this.maxCaptureSize=o;this.prefix=t,this.originalConsole={log:console.log.bind(console),info:console.info.bind(console),warn:console.warn.bind(console),error:console.error.bind(console),debug:console.debug.bind(console)},this.patchConsole()}originalConsole;logBuffer=[];patchConsole(){let t=o=>(...n)=>{let i=this.prefix?[this.prefix,...n]:n;this.originalConsole[o](...i),this.captureLog(o,n)};console.log=t("log"),console.info=t("info"),console.warn=t("warn"),console.error=t("error"),console.debug=t("debug")}captureLog(t,o){let n={level:t,timestamp:Date.now(),message:o.map(i=>{if(typeof i=="string")return i;try{return JSON.stringify(i)}catch{return String(i)}}).join(" ")};this.logBuffer.push(n),this.logBuffer.length>this.maxCaptureSize&&this.logBuffer.shift()}async postToServer(t,o){if(this.logBuffer.length>0){let i=[...this.logBuffer];this.logBuffer=[];try{if(!(await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i.map(c=>({...c,source:o})))})).ok)throw new Error("Failed to post logs to server")}catch(a){console.warn("Could not post logs to server",a.message),this.logBuffer.unshift(...i)}}}},v;function w(e=""){return v=new g(e),v}var m=e=>{throw new Error("Not initialized yet")},x=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var y=new Map,f=0;x&&(globalThis.syscall=async(e,...t)=>await new Promise((o,n)=>{f++,y.set(f,{resolve:o,reject:n}),m({type:"sys",id:f,name:e,args:t})}));function C(e,t,o){x&&(m=o,self.addEventListener("message",n=>{(async()=>{let i=n.data;switch(i.type){case"inv":{let a=e[i.name];if(!a)throw new Error(`Function not loaded: ${i.name}`);try{let c=await Promise.resolve(a(...i.args||[]));m({type:"invr",id:i.id,result:c})}catch(c){console.error("An exception was thrown as a result of invoking function",i.name,"error:",c.message),m({type:"invr",id:i.id,error:c.message})}}break;case"sysr":{let a=i.id,c=y.get(a);if(!c)throw Error("Invalid request id");y.delete(a),i.error?c.reject(new Error(i.error)):c.resolve(i.result)}break}})().catch(console.error)}),m({type:"manifest",manifest:t}),w(`[${t.name} plug]`))}async function B(e,t){if(typeof e!="string"){let o=new Uint8Array(await e.arrayBuffer()),n=o.length>0?d(o):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function O(){globalThis.fetch=async function(e,t){let o=t&&t.body?d(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,n=await B(e,t&&{method:t.method,headers:t.headers,base64Body:o});return new Response(n.base64Body?b(n.base64Body):null,{status:n.status,headers:n.headers})}}x&&O();var s={};p(s,{alert:()=>ve,configureVimMode:()=>qe,confirm:()=>be,copyToClipboard:()=>Le,deleteLine:()=>Ue,dispatch:()=>he,downloadFile:()=>se,filterBox:()=>ce,flashNotification:()=>ue,fold:()=>Te,foldAll:()=>Se,getCurrentEditor:()=>G,getCurrentPage:()=>q,getCurrentPageMeta:()=>K,getCurrentPath:()=>_,getCursor:()=>I,getRecentlyOpenedPages:()=>N,getSelection:()=>V,getText:()=>$,getUiOption:()=>we,goHistory:()=>ie,hidePanel:()=>le,insertAtCursor:()=>xe,insertAtPos:()=>de,invokeCommand:()=>W,isMobile:()=>_e,moveCursor:()=>fe,moveCursorToLine:()=>ye,moveLineDown:()=>Be,moveLineUp:()=>je,navigate:()=>Y,newWindow:()=>ne,openCommandPalette:()=>X,openPageNavigator:()=>J,openSearchPanel:()=>De,openUrl:()=>oe,prompt:()=>Pe,rebuildEditorState:()=>te,redo:()=>Ee,reloadConfigAndCommands:()=>re,reloadPage:()=>Z,reloadUI:()=>ee,replaceRange:()=>ge,save:()=>z,sendMessage:()=>Ke,setSelection:()=>H,setText:()=>Q,setUiOption:()=>Ce,showPanel:()=>me,showProgress:()=>pe,toggleComment:()=>Re,toggleFold:()=>ke,undo:()=>Ae,unfold:()=>Me,unfoldAll:()=>Fe,uploadFile:()=>ae,vimEx:()=>Oe});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});function r(e,...t){return globalThis.syscall(e,...t)}function q(){return r("editor.getCurrentPage")}function K(){return r("editor.getCurrentPageMeta")}function _(){return r("editor.getCurrentPath")}function N(){return r("editor.getRecentlyOpenedPages")}function G(){return r("editor.getCurrentEditor")}function $(){return r("editor.getText")}function Q(e,t=!1){return r("editor.setText",e,t)}function I(){return r("editor.getCursor")}function V(){return r("editor.getSelection")}function H(e,t){return r("editor.setSelection",e,t)}function W(e,t){return r("editor.invokeCommand",e,t)}function z(){return r("editor.save")}function Y(e,t=!1,o=!1){return r("editor.navigate",e,t,o)}function J(e="page"){return r("editor.openPageNavigator",e)}function X(){return r("editor.openCommandPalette")}function Z(){return r("editor.reloadPage")}function ee(){return r("editor.reloadUI")}function te(){return r("editor.rebuildEditorState")}function re(){return r("editor.reloadConfigAndCommands")}function oe(e,t=!1){return r("editor.openUrl",e,t)}function ne(){return r("editor.newWindow")}function ie(e){return r("editor.goHistory",e)}function se(e,t){return r("editor.downloadFile",e,t)}function ae(e,t){return r("editor.uploadFile",e,t)}function ue(e,t="info"){return r("editor.flashNotification",e,t)}function ce(e,t,o="",n=""){return r("editor.filterBox",e,t,o,n)}function me(e,t,o,n=""){return r("editor.showPanel",e,t,o,n)}function le(e){return r("editor.hidePanel",e)}function pe(e,t){return r("editor.showProgress",e,t)}function de(e,t){return r("editor.insertAtPos",e,t)}function ge(e,t,o){return r("editor.replaceRange",e,t,o)}function fe(e,t=!1){return r("editor.moveCursor",e,t)}function ye(e,t=1,o=!1){return r("editor.moveCursorToLine",e,t,o)}function xe(e,t=!1,o=!1){return r("editor.insertAtCursor",e,t,o)}function he(e){return r("editor.dispatch",e)}function Pe(e,t=""){return r("editor.prompt",e,t)}function be(e){return r("editor.confirm",e)}function ve(e){return r("editor.alert",e)}function we(e){return r("editor.getUiOption",e)}function Ce(e,t){return r("editor.setUiOption",e,t)}function Te(){return r("editor.fold")}function Me(){return r("editor.unfold")}function ke(){return r("editor.toggleFold")}function Se(){return r("editor.foldAll")}function Fe(){return r("editor.unfoldAll")}function Ae(){return r("editor.undo")}function Ee(){return r("editor.redo")}function De(){return r("editor.openSearchPanel")}function Le(e){return r("editor.copyToClipboard",e)}function Ue(){return r("editor.deleteLine")}function Re(){return r("editor.toggleComment")}function je(){return r("editor.moveLineUp")}function Be(){return r("editor.moveLineDown")}function Oe(e){return r("editor.vimEx",e)}function qe(){return r("editor.configureVimMode")}function Ke(e,t){return r("editor.sendMessage",e,t)}function _e(){return r("editor.isMobile")}var l={};p(l,{getConfig:()=>Ye,getMode:()=>We,getVersion:()=>ze,invokeCommand:()=>Qe,invokeFunction:()=>$e,listCommands:()=>Ie,listSyscalls:()=>Ve,reloadPlugs:()=>He,wipeClient:()=>Je});function $e(e,...t){return r("system.invokeFunction",e,...t)}function Qe(e,t){return r("system.invokeCommand",e,t)}function Ie(){return r("system.listCommands")}function Ve(){return r("system.listSyscalls")}function He(){return r("system.reloadPlugs")}function We(){return r("system.getMode")}function ze(){return r("system.getVersion")}function Ye(e,t=void 0){return r("system.getConfig",e,t)}function Je(e=!1){return r("system.wipeClient",e)}var u={};p(u,{run:()=>nt});function nt(e,t){return r("shell.run",e,t)}var T=/https:\/\/([^:]+):([^@]+)@gitlab\.com\/([^\/]+)\/([^\/\.]+)\.git/,M=/https:\/\/([^@]+)@github\.com\/([^\/]+)\/([^\/\.]+)\.git/;async function h(e){e||(e="Snapshot"),console.log("Snapshotting the current space to git with commit message",e);let{code:t}=await u.run("git",["add","./*"]);console.log("Git add code",t);try{await u.run("git",["commit","-a","-m",e])}catch{}console.log("Done!")}async function k(){let e=await s.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),await h(e),await s.flashNotification("Done!")}async function S(){await s.flashNotification("Syncing with git"),await F(),await s.flashNotification("Git sync complete!")}async function F(){console.log("Going to sync with git"),await h(),console.log("Then pulling from remote"),await u.run("git",["pull"]),console.log("And then pushing to remote"),await u.run("git",["push"]),console.log("Done!")}async function A(e,t,o){let n=e.join("/")+".git";await s.flashNotification("Now going to clone the project, this may take some time."),await u.run("mkdir",["-p","_checkout"]),await u.run("git",["clone",n,"_checkout"]),await u.run("bash",["-c","mv -f _checkout/{.,}* . 2> /dev/null; true"]),await u.run("rm",["-rf","_checkout"]),await u.run("git",["config","user.name",t]),await u.run("git",["config","user.email",o]),await s.flashNotification("Done. Now just wait for sync to kick in to get all the content.")}async function E(){let e=await s.prompt("Github project URL:");if(!e)return;let t=await s.prompt("Github token:");if(!t)return;let o=await s.prompt("Your name:");if(!o)return;let n=await s.prompt("Your email:");if(!n)return;let i=e.split("/");i[2]=`${t}@${i[2]}`,await A(i,o,n)}async function D(){let e=await s.prompt("Gitlab project URL:");if(!e)return;let t=await s.prompt("Gitlab Username:");if(!t)return;let o=await s.prompt("Gitlab token:");if(!o)return;let n=await s.prompt("Your name:");if(!n)return;let i=await s.prompt("Your email:");if(!i)return;let a=e.split("/");a[2]=`${t}:${o}@${a[2]}`,await A(a,n,i)}async function P(){let e=await l.getConfig("git",{});e.autoCommitMinutes&&(console.log("Triggered auto commit with config",e),new Date().getMinutes()%e.autoCommitMinutes===0&&(console.log("Auto commit time!"),e.autoSync?await F():await h("Auto commit")))}globalThis.gitInterval&&clearTimeout(globalThis.gitInterval);setInterval(P,60*1e3);function pt(e){let t=e.match(M);if(!t)return null;let[o,n,i,a]=t;return[n,i,a]}function dt(e){let t=e.match(T);if(!t)return null;let[o,n,i,a,c]=t;return[n,i,a,c]}function gt(e,t){let o="";if(T.test(e)){let n=dt(e);o=`https://${n[0]}:${t}@gitlab.com/${n[2]}/${n[3]}.git`}if(M.test(e)){let n=pt(e);o=`https://${t}@github.com/${n[1]}/${n[2]}.git`}return o}async function L(){let e=await s.prompt("Enter new token:");if(!e)return;let t=(await u.run("git",["remote","get-url","origin"])).stdout.trim(),o=gt(t,e);if(o.trim()==""){await s.flashNotification("Token replaced failed!");return}await u.run("git",["remote","set-url","origin",o]),await s.flashNotification("Token replaced successfully!")}var U={autoCommit:P,githubCloneCommand:E,gitlabCloneCommand:D,snapshotCommand:k,syncCommand:S,gitReplaceTokenCommand:L},R={name:"git",requiredPermissions:["shell"],functions:{autoCommit:{path:"git.ts:autoCommit",env:"server",cron:"* * * * *"},githubCloneCommand:{path:"./git.ts:githubCloneCommand",command:{name:"Github: Clone"}},gitlabCloneCommand:{path:"./git.ts:gitlabCloneCommand",command:{name:"Gitlab: Clone"}},snapshotCommand:{path:"./git.ts:snapshotCommand",command:{name:"Git: Snapshot"}},syncCommand:{path:"./git.ts:syncCommand",command:{name:"Git: Sync"}},gitReplaceTokenCommand:{path:"./git.ts:gitReplaceTokenCommand",command:{name:"Git: Replace Token"}}},config:{"schema.tag":{git:{type:"object",properties:{autoCommitMinutes:{type:"number"},autocommit:{type:"boolean"}}}}},assets:{}},er={manifest:R,functionMapping:U};C(U,R,self.postMessage);export{er as plug};
